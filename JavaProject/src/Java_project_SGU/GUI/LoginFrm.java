/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Java_project_SGU.GUI;

import Java_project_SGU.DAL.ReadCusSqlImp;
import Java_project_SGU.DAL.ReadStaffSqlImp;
import Java_project_SGU.DAL.WriteCusSqlImp;
import Java_project_SGU.DAL.Write_ReadMovieToSqlImp;
import Java_project_SGU.BUS.ClassListMovie;
import Java_project_SGU.BUS.ClassListStaff;
import Java_project_SGU.BUS.Customer;
import Java_project_SGU.BUS.Movie;
import Java_project_SGU.BUS.Staff;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author ADMIN
 */
public class LoginFrm extends javax.swing.JFrame implements ActionListener {

    private ReadCusSqlImp readCusSqlImp;
    private List<Customer> customers;
    private ClassListMovie classListMovie;
    private ClassListStaff classListStaff;

    /**
     * Creates new form LoginFrm
     */
    public LoginFrm() {
        initComponents();
        addActionlistener();
        this.setLocationRelativeTo(null);
        readCusSqlImp = new ReadCusSqlImp();
        loadDataFromSql();
        animationMovieImage();
        for (Staff staff : classListStaff.getListStaff()) {
            System.out.println(staff.getAccount() + " " + staff.getPassword());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        imageMovieLB = new javax.swing.JLabel();
        loginArea = new javax.swing.JPanel();
        accountLB = new javax.swing.JLabel();
        accountTxt = new javax.swing.JTextField();
        passwordLB = new javax.swing.JLabel();
        isSaveRB = new javax.swing.JCheckBox();
        loginBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        passwordTxt = new javax.swing.JPasswordField();
        registerBtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(153, 0, 153));

        imageMovieLB.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(imageMovieLB, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageMovieLB, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        loginArea.setBackground(new java.awt.Color(255, 255, 255));
        loginArea.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 0, 153)));
        loginArea.setForeground(new java.awt.Color(153, 0, 153));
        loginArea.setToolTipText("");

        accountLB.setBackground(new java.awt.Color(255, 255, 255));
        accountLB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        accountLB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java_project_SGU/Image/user_icon.png"))); // NOI18N
        accountLB.setText("Tài khoản :");
        accountLB.setMaximumSize(new java.awt.Dimension(125, 48));
        accountLB.setMinimumSize(new java.awt.Dimension(125, 48));
        accountLB.setOpaque(true);
        accountLB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                accountLBFocusGained(evt);
            }
        });

        accountTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        accountTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 0, 153)));
        accountTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                accountTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                accountTxtFocusLost(evt);
            }
        });
        accountTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accountTxtActionPerformed(evt);
            }
        });

        passwordLB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        passwordLB.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Java_project_SGU/Image/password_icon.png"))); // NOI18N
        passwordLB.setText("Mật khẩu :");

        isSaveRB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        isSaveRB.setForeground(new java.awt.Color(153, 0, 153));
        isSaveRB.setText("Lưu mật khẩu ?");
        isSaveRB.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        isSaveRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                isSaveRBActionPerformed(evt);
            }
        });

        loginBtn.setBackground(new java.awt.Color(153, 0, 153));
        loginBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        loginBtn.setForeground(new java.awt.Color(255, 255, 255));
        loginBtn.setText("Đăng nhập");
        loginBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        loginBtn.setBorderPainted(false);
        loginBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        loginBtn.setFocusPainted(false);
        loginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 153));
        jLabel4.setText("Quên mật khẩu ?");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        passwordTxt.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        passwordTxt.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(153, 0, 153)));
        passwordTxt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordTxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordTxtFocusLost(evt);
            }
        });

        registerBtn.setBackground(new java.awt.Color(153, 0, 153));
        registerBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        registerBtn.setForeground(new java.awt.Color(255, 255, 255));
        registerBtn.setText("Đăng kí");
        registerBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        registerBtn.setBorderPainted(false);
        registerBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        registerBtn.setFocusPainted(false);
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });

        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 153));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("WELCOME BACK");

        javax.swing.GroupLayout loginAreaLayout = new javax.swing.GroupLayout(loginArea);
        loginArea.setLayout(loginAreaLayout);
        loginAreaLayout.setHorizontalGroup(
            loginAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginAreaLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(loginAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginAreaLayout.createSequentialGroup()
                        .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(isSaveRB)
                    .addComponent(accountLB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordLB)
                    .addGroup(loginAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(accountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginAreaLayout.createSequentialGroup()
                .addContainerGap(118, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(112, 112, 112))
            .addGroup(loginAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(loginAreaLayout.createSequentialGroup()
                    .addGap(285, 285, 285)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        loginAreaLayout.setVerticalGroup(
            loginAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginAreaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(accountLB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(accountTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(passwordLB)
                .addGap(4, 4, 4)
                .addComponent(passwordTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(isSaveRB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(registerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37))
            .addGroup(loginAreaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(loginAreaLayout.createSequentialGroup()
                    .addContainerGap(297, Short.MAX_VALUE)
                    .addComponent(jLabel4)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(loginArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(loginArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void accountTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accountTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_accountTxtActionPerformed

    private void loginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginBtnActionPerformed

    private void isSaveRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_isSaveRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_isSaveRBActionPerformed

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_registerBtnActionPerformed

    private void accountTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_accountTxtFocusGained
        Font myFont = new Font("Arial", Font.BOLD, 16);
        accountLB.setFont(myFont);
        accountLB.setForeground(new java.awt.Color(153, 0, 153));
    }//GEN-LAST:event_accountTxtFocusGained

    private void accountLBFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_accountLBFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_accountLBFocusGained

    private void passwordTxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTxtFocusGained
        Font myFont = new Font("Arial", Font.BOLD, 16);
        passwordLB.setFont(myFont);
        passwordLB.setForeground(new java.awt.Color(153, 0, 153));
    }//GEN-LAST:event_passwordTxtFocusGained

    private void accountTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_accountTxtFocusLost
        // TODO add your handling code here:
        Font myFont = new Font("Segoe UI", Font.PLAIN, 14);
        accountLB.setFont(myFont);
        accountLB.setForeground(Color.BLACK);
        for (Customer customer : this.customers) {
            if (customer.getIsSavePW()) {
               if(customer.getAccount().equals(accountTxt.getText())) {
                    passwordTxt.setText(customer.getPassword());
                    isSaveRB.setSelected(true);
                }     
            }
        }
    }//GEN-LAST:event_accountTxtFocusLost

    private void passwordTxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTxtFocusLost
        // TODO add your handling code here:
        Font myFont = new Font("Segoe UI", Font.PLAIN, 14);
        passwordLB.setFont(myFont);
        passwordLB.setForeground(Color.BLACK);
    }//GEN-LAST:event_passwordTxtFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Window".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel accountLB;
    private javax.swing.JTextField accountTxt;
    private javax.swing.JLabel imageMovieLB;
    private javax.swing.JCheckBox isSaveRB;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel loginArea;
    private javax.swing.JButton loginBtn;
    private javax.swing.JLabel passwordLB;
    private javax.swing.JPasswordField passwordTxt;
    private javax.swing.JButton registerBtn;
    // End of variables declaration//GEN-END:variables

    public void showDialogRegister() {
//        CustomerRegisterDialog customerRegisterDialog = new 
//        CustomerRegisterDialog(this, true);
//        customerRegisterDialog.setVisible(true);
    }

    private void addActionlistener() {
        this.registerBtn.addActionListener(this);
        this.loginBtn.addActionListener(this);
        this.isSaveRB.addActionListener(this);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Object src = e.getSource();
        if (src.equals(registerBtn)) {
            CustomerResigterDialog customerResigterDialog = new CustomerResigterDialog(this, rootPaneCheckingEnabled,
                    CustomerResigterDialog.WRITE_IN_LOGIN);
            customerResigterDialog.setVisible(true);
        } else if (src.equals(loginBtn)) {
            loginCus_SavePW();
        }
    }

    void addNewCusCallBack(Customer customer) {
        this.customers.add(customer);
        WriteCusSqlImp writeDataSqlImp = new WriteCusSqlImp();
        writeDataSqlImp.insertData(customer);
    }

    private void readCustomersSQL() {
        this.customers = new ArrayList<>();
        this.customers = readCusSqlImp.readCustomersFromDataSource();
        upLoadIdCustomerStatic(customers);
    }

    private void upLoadIdCustomerStatic(List<Customer> customers) {
        int maxId = Customer.getIdCustomerAuto();
        for (Customer customer : customers) {
            int LastId = Integer.parseInt(customer.getId_customer().substring(3));
            if (LastId > maxId) {
                maxId = LastId;
            }
        }
        Customer.setIdCustomerAuto(maxId + 1);
    }

    private void animationMovieImage() {
        new Thread(new Runnable() {

            private void readMoviesFromSQL() {
                classListMovie = new ClassListMovie();
                Write_ReadMovieToSqlImp wrMovieSQL = new Write_ReadMovieToSqlImp();
                classListMovie.setMovies(wrMovieSQL.readMovieFromDS());
            }

            @Override
            public void run() {
                readMoviesFromSQL();
                while (true) {
                    for (Movie movie : classListMovie.getMovies()) {
                        try {
                            ImageIcon posterImage = new ImageIcon(movie.getLinkImage());
                            imageMovieLB.setIcon(posterImage);
                            Thread.sleep(1500);
                        } catch (InterruptedException ex) {
                            ex.printStackTrace();
                        }
                    }
                }
            }
        }).start();
    }

    private void loadDataFromSql() {
        readCustomersSQL();
        readStaffsSQL();
    }

    private boolean activeSavePassword(Customer customer, boolean isSavePW) {
        WriteCusSqlImp writeCusSQL = new WriteCusSqlImp();
        if (isSavePW) {
            customer.setIsSavePW(true);
            writeCusSQL.activeSavePWSQL(1, customer);
            return true;
        } else {
            customer.setIsSavePW(false);
            writeCusSQL.activeSavePWSQL(0, customer);
            return false;
        }
        // Ghi SQL
    }

    private void loginCus_SavePW() {
        String accountInput = accountTxt.getText();
        String passwordInput = String.valueOf(passwordTxt.getPassword());
        boolean isSuccessLogin = false;
        for (Customer customer : customers) {
            if (customer.getAccount().equals(accountInput)
                    && customer.getPassword().equals(passwordInput)) {
                boolean isSaveSuccess = activeSavePassword(customer, isSaveRB.isSelected());
                if (isSaveSuccess) {
                    JOptionPane.showMessageDialog(rootPane, "Mật khẩu của bạn đã được lưu!");
                }
                HomePageCusFrm homePageCusFrm = new HomePageCusFrm(customer);
                homePageCusFrm.setVisible(true);
                isSuccessLogin = true;
            }
        }
        for (Staff staff : classListStaff.getListStaff()) {
            if (staff.getAccount().equals(accountInput)
                    && staff.getPassword().equals(passwordInput)) {
                if (staff.getID_Staff().substring(0, 1).equals("M")) {
                    ManageEmployeeFrm manageFrm = new ManageEmployeeFrm(customers, staff);
                    manageFrm.setVisible(true);
                    isSuccessLogin = true;
                }
            }
        }
        
        for (Staff staff : classListStaff.getListStaff()) {
            if (staff.getAccount().equals(accountInput)
                    && staff.getPassword().equals(passwordInput)) {
                if (staff.getID_Staff().substring(0, 1).equals("S")) {
                    TicketClerkView ticketClerkView = new TicketClerkView(this, true, staff);
                    ticketClerkView.setVisible(true);
                    isSuccessLogin = true;
                }
            }
        }
        
        if (!isSuccessLogin) {
            JOptionPane.showMessageDialog(rootPane,
                    "Tên đăng nhập hoặc mật khẩu không đúng!");
        }
    }

    private void readStaffsSQL() {
        this.classListStaff = new ClassListStaff();
        ReadStaffSqlImp readSQLStaff = new ReadStaffSqlImp();
        this.classListStaff.setListStaff(readSQLStaff.readStaffFromDataSource());
    }
}

